// Generated from C:/Development/Repository/urisc-v/src/grammar/uriscv.g4 by ANTLR 4.13.2
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,29,192,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,4,1,
4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,8,1,
8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,
11,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,15,1,15,1,15,
1,15,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,
20,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,4,22,145,8,22,11,22,12,22,146,
1,23,1,23,5,23,151,8,23,10,23,12,23,154,9,23,1,24,1,24,1,24,1,24,4,24,160,
8,24,11,24,12,24,161,1,25,4,25,165,8,25,11,25,12,25,166,1,26,1,26,5,26,171,
8,26,10,26,12,26,174,9,26,1,26,1,26,1,27,4,27,179,8,27,11,27,12,27,180,1,
27,1,27,1,28,3,28,186,8,28,1,28,4,28,189,8,28,11,28,12,28,190,0,0,29,1,1,
3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,
31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,
55,28,57,29,1,0,6,1,0,48,57,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,
97,122,3,0,48,57,65,70,97,102,2,0,10,10,13,13,2,0,9,9,32,32,199,0,1,1,0,
0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,
0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,
25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,
0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,
1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,
1,59,1,0,0,0,3,62,1,0,0,0,5,64,1,0,0,0,7,67,1,0,0,0,9,71,1,0,0,0,11,75,1,
0,0,0,13,80,1,0,0,0,15,84,1,0,0,0,17,89,1,0,0,0,19,93,1,0,0,0,21,98,1,0,
0,0,23,102,1,0,0,0,25,107,1,0,0,0,27,110,1,0,0,0,29,114,1,0,0,0,31,118,1,
0,0,0,33,122,1,0,0,0,35,126,1,0,0,0,37,130,1,0,0,0,39,132,1,0,0,0,41,134,
1,0,0,0,43,136,1,0,0,0,45,142,1,0,0,0,47,148,1,0,0,0,49,155,1,0,0,0,51,164,
1,0,0,0,53,168,1,0,0,0,55,178,1,0,0,0,57,188,1,0,0,0,59,60,5,76,0,0,60,61,
5,87,0,0,61,2,1,0,0,0,62,63,5,44,0,0,63,4,1,0,0,0,64,65,5,83,0,0,65,66,5,
87,0,0,66,6,1,0,0,0,67,68,5,83,0,0,68,69,5,85,0,0,69,70,5,66,0,0,70,8,1,
0,0,0,71,72,5,65,0,0,72,73,5,68,0,0,73,74,5,68,0,0,74,10,1,0,0,0,75,76,5,
65,0,0,76,77,5,68,0,0,77,78,5,68,0,0,78,79,5,73,0,0,79,12,1,0,0,0,80,81,
5,83,0,0,81,82,5,76,0,0,82,83,5,84,0,0,83,14,1,0,0,0,84,85,5,83,0,0,85,86,
5,76,0,0,86,87,5,84,0,0,87,88,5,73,0,0,88,16,1,0,0,0,89,90,5,83,0,0,90,91,
5,76,0,0,91,92,5,76,0,0,92,18,1,0,0,0,93,94,5,83,0,0,94,95,5,76,0,0,95,96,
5,76,0,0,96,97,5,73,0,0,97,20,1,0,0,0,98,99,5,65,0,0,99,100,5,78,0,0,100,
101,5,68,0,0,101,22,1,0,0,0,102,103,5,65,0,0,103,104,5,78,0,0,104,105,5,
68,0,0,105,106,5,73,0,0,106,24,1,0,0,0,107,108,5,79,0,0,108,109,5,82,0,0,
109,26,1,0,0,0,110,111,5,79,0,0,111,112,5,82,0,0,112,113,5,73,0,0,113,28,
1,0,0,0,114,115,5,66,0,0,115,116,5,69,0,0,116,117,5,81,0,0,117,30,1,0,0,
0,118,119,5,66,0,0,119,120,5,78,0,0,120,121,5,69,0,0,121,32,1,0,0,0,122,
123,5,66,0,0,123,124,5,76,0,0,124,125,5,84,0,0,125,34,1,0,0,0,126,127,5,
66,0,0,127,128,5,71,0,0,128,129,5,69,0,0,129,36,1,0,0,0,130,131,5,40,0,0,
131,38,1,0,0,0,132,133,5,41,0,0,133,40,1,0,0,0,134,135,5,58,0,0,135,42,1,
0,0,0,136,137,5,46,0,0,137,138,5,119,0,0,138,139,5,111,0,0,139,140,5,114,
0,0,140,141,5,100,0,0,141,44,1,0,0,0,142,144,5,120,0,0,143,145,7,0,0,0,144,
143,1,0,0,0,145,146,1,0,0,0,146,144,1,0,0,0,146,147,1,0,0,0,147,46,1,0,0,
0,148,152,7,1,0,0,149,151,7,2,0,0,150,149,1,0,0,0,151,154,1,0,0,0,152,150,
1,0,0,0,152,153,1,0,0,0,153,48,1,0,0,0,154,152,1,0,0,0,155,156,5,48,0,0,
156,157,5,120,0,0,157,159,1,0,0,0,158,160,7,3,0,0,159,158,1,0,0,0,160,161,
1,0,0,0,161,159,1,0,0,0,161,162,1,0,0,0,162,50,1,0,0,0,163,165,7,0,0,0,164,
163,1,0,0,0,165,166,1,0,0,0,166,164,1,0,0,0,166,167,1,0,0,0,167,52,1,0,0,
0,168,172,5,35,0,0,169,171,8,4,0,0,170,169,1,0,0,0,171,174,1,0,0,0,172,170,
1,0,0,0,172,173,1,0,0,0,173,175,1,0,0,0,174,172,1,0,0,0,175,176,6,26,0,0,
176,54,1,0,0,0,177,179,7,5,0,0,178,177,1,0,0,0,179,180,1,0,0,0,180,178,1,
0,0,0,180,181,1,0,0,0,181,182,1,0,0,0,182,183,6,27,0,0,183,56,1,0,0,0,184,
186,5,13,0,0,185,184,1,0,0,0,185,186,1,0,0,0,186,187,1,0,0,0,187,189,5,10,
0,0,188,185,1,0,0,0,189,190,1,0,0,0,190,188,1,0,0,0,190,191,1,0,0,0,191,
58,1,0,0,0,9,0,146,152,161,166,172,180,185,190,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class uriscvLexer extends antlr4.Lexer {

    static grammarFileName = "uriscv.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'LW'", "','", "'SW'", "'SUB'", "'ADD'", 
                         "'ADDI'", "'SLT'", "'SLTI'", "'SLL'", "'SLLI'", 
                         "'AND'", "'ANDI'", "'OR'", "'ORI'", "'BEQ'", "'BNE'", 
                         "'BLT'", "'BGE'", "'('", "')'", "':'", "'.word'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, "WORD_DIRECTIVE", 
                          "REGISTER", "LABEL", "HEX_NUMBER", "DEC_NUMBER", 
                          "COMMENT", "WS", "NEWLINE" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "T__20", "WORD_DIRECTIVE", "REGISTER", "LABEL", 
                      "HEX_NUMBER", "DEC_NUMBER", "COMMENT", "WS", "NEWLINE" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

uriscvLexer.EOF = antlr4.Token.EOF;
uriscvLexer.T__0 = 1;
uriscvLexer.T__1 = 2;
uriscvLexer.T__2 = 3;
uriscvLexer.T__3 = 4;
uriscvLexer.T__4 = 5;
uriscvLexer.T__5 = 6;
uriscvLexer.T__6 = 7;
uriscvLexer.T__7 = 8;
uriscvLexer.T__8 = 9;
uriscvLexer.T__9 = 10;
uriscvLexer.T__10 = 11;
uriscvLexer.T__11 = 12;
uriscvLexer.T__12 = 13;
uriscvLexer.T__13 = 14;
uriscvLexer.T__14 = 15;
uriscvLexer.T__15 = 16;
uriscvLexer.T__16 = 17;
uriscvLexer.T__17 = 18;
uriscvLexer.T__18 = 19;
uriscvLexer.T__19 = 20;
uriscvLexer.T__20 = 21;
uriscvLexer.WORD_DIRECTIVE = 22;
uriscvLexer.REGISTER = 23;
uriscvLexer.LABEL = 24;
uriscvLexer.HEX_NUMBER = 25;
uriscvLexer.DEC_NUMBER = 26;
uriscvLexer.COMMENT = 27;
uriscvLexer.WS = 28;
uriscvLexer.NEWLINE = 29;



